######## Set Variables ###############

$path = "C:\Solutions\*.wsp"

######################################

Write-Host "Please wait loading ...."
Add-PSSnapin microsoft.sharepoint.powershell -ErrorAction SilentlyContinue
$list = Get-ChildItem $path | where { $_.extension -eq ".wsp" }

    foreach($wspfile in Get-ChildItem $list)
    {
        $WSPFullFileName = $wspfile.FullName
     $WSPFileName = $wspfile.Name
      
        Write-Host -ForegroundColor White -BackgroundColor Blue "Working on $WSPFileName"
      
        try
     {
      Write-Host -ForegroundColor Blue "Checking Status ........"
      $output = Get-SPSolution -Identity $WSPFileName -ErrorAction Stop
     }
     Catch
     {
      $DoesSolutionExists = $_
     }
      
        if (($DoesSolutionExists -notlike "*Cannot find an SPSolution*") -and ($output.Deployed -eq $true))
     {
            try
            {
                    Write-Host -ForegroundColor Green "Retracting Solution......."
           $skip = $null
              $tryagain = $null
              Try
              {
               if ($output.Deployed -eq $true)
               {
                Uninstall-SPSolution -AllWebApplications -Identity $WSPFileName -Confirm:$false -ErrorAction Stop
               }
              }
              Catch
              {
               $tryagain = $_
              }
                  
              Try
              {
               if ($tryagain -ne $null)
               {
                Uninstall-SPSolution -Identity $WSPFileName -Confirm:$false -ErrorAction Stop
               }
              }
              Catch
              {
               Write-Host -ForegroundColor Red "Could not Retract Solution......."
                        Read-Host
              }
                  
                    #Sleep for 5 sec
                    Start-Sleep -s 90
                                  
                    Try
              {
               Write-Host -ForegroundColor Green "Removing Solution from farm.........."
               Remove-SPSolution -Identity $WSPFileName -force -Confirm:$false  -ErrorAction Stop
                        Start-Sleep -s 30
              }
              Catch
              {
               
               Write-Host -ForegroundColor Red "Could not Remove Solution.........."
               Read-Host
              }
                      
                    Write-Host -ForegroundColor Yellow "Waiting for process........."
                    #Sleep for 5 sec
                    Start-Sleep -s 10
                }
                Catch
          {
           Write-Error $_
           Write-Host -ForegroundColor Red "Skipping $WSPFileName  Error occurred ......."
           Read-Host
          }
          
       }#IF Loop
        If ($DoesSolutionExists -like "*Cannot find an SPSolution*")
        {
            Write-Host -ForegroundColor Red "Could not Retract Solution... $WSPFileName Not deployed in this Farm..."
        }
      
    } #For Loop For Remove Solution
    
# WSP Deploying code

$action = Read-Host "Action: Install ? (Y/N)"
if($action -eq "Y")
{
    foreach($wspfile in Get-ChildItem $list)
    {
        $WSPFullFileName = $wspfile.FullName
     $WSPFileName = $wspfile.Name
      
        Write-Host -ForegroundColor White -BackgroundColor Blue "Working on $WSPFileName...."
      
        try
     {
      Write-Host -ForegroundColor Blue "Checking Status........"
      $output = Get-SPSolution -Identity $WSPFileName -ErrorAction Stop
     }
     Catch
     {
      $DoesSolutionExists = $_
     }
      
        If (($DoesSolutionExists -like "*Cannot find an SPSolution*") -and ($output.Name -notlike  "*$WSPFileName*"))
     {
            Try
      {
       Write-Host -ForegroundColor Green "Adding solution to farm"
       Add-SPSolution "$WSPFullFileName" -Confirm:$false -ErrorAction Stop | Out-Null
    
       #Write-Host -ForegroundColor Blue "Checking Status of Solution"
       $output = Get-SPSolution -Identity $WSPFileName -ErrorAction Stop
       $gobal = $null
       if ($output.Deployed -eq $false)
       {
        try
        {
         Write-Host -ForegroundColor Green "Deploy solution to all Web Apps........."
         Install-SPSolution -Identity "$WSPFileName" -GACDeployment -AllWebApplications -Force -Confirm:$false -ErrorAction Stop | Out-Null
        }
        Catch
        {
         $gobal = $_
        }
        If ($gobal -like "*This solution contains*")
        {
         Write-Host -ForegroundColor Green "solution deploys globally.........."
         Install-SPSolution -Identity "$WSPFileName" -GACDeployment -Force -Confirm:$false -ErrorAction Stop | Out-Null
        }
       }
    
       Sleep 5
       $dpjobs = Get-SPTimerJob | Where { $_.Name -like "*$WSPFileName*" }
       If ($dpjobs -eq $null)
          {
              Write-Host -ForegroundColor Green "No solution deployment jobs found..."
          }
       Else
       {
        If ($dpjobs -is [Array])
        {
         Foreach ($job in $dpjobs)
         {
          $jobName = $job.Name
          While ((Get-SPTimerJob $jobName -Debug:$false) -ne $null)
          {
           Write-Host -ForegroundColor Yellow -NoNewLine "."
           Start-Sleep -Seconds 5
          }
          Write-Host
         }
        }
           Else
           {
         $jobName = $dpjobs.Name
         While ((Get-SPTimerJob $jobName -Debug:$false) -ne $null)
         {
          Write-Host -ForegroundColor Yellow -NoNewLine "."
          Start-Sleep -Seconds 5
         }
         Write-Host
           }
       }
      }
      Catch
      {
       Write-Error $_
       Write-Host -ForegroundColor Red "Skipping $WSPFileName Error occurred ......."
       Read-Host
      } #Try & Catch
       } #If Loop
      
    }# For Loop

}#If for action
